{"version":3,"sources":["logo.svg","App.js","index.js"],"names":["module","exports","__webpack_require__","p","App","_useState","useState","_useState2","Object","slicedToArray","quote","setQuote","_useState3","_useState4","author","setAuthor","useEffect","fetchRandomQuote","axios","get","then","response","data","catch","error","console","log","quoteText","quoteAuthor","react_default","a","createElement","className","id","src","logo","alt","index_es","icon","faQuoteLeft","faQuoteRight","href","target","faTwitter","onClick","rel","faFreeCodeCamp","faGithub","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yRCiGzBC,MAxFf,WAAe,IAAAC,EACaC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA/BK,EAAKH,EAAA,GAAEI,EAAQJ,EAAA,GAAAK,EACMN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAExBG,oBAAU,WACRC,KACC,IAEH,IAAMA,EAAmB,WACvBC,IACGC,IAAI,uCACJC,KAAK,SAACC,GACL,IAAMC,EAAOD,EAASC,KAEtBX,EAASW,EAAKZ,OACdK,EAAUO,EAAKR,UAGhBS,MAAM,SAACC,GACNC,QAAQC,IAAIF,MAIZG,EAAYjB,EACZkB,EAAcd,EAEpB,OACEe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,QACNJ,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,IAAMH,UAAU,WAAWI,IAAI,UAE3CP,EAAAC,EAAAC,cAAA,OAAKE,GAAG,YAAYD,UAAU,QAC5BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIE,GAAG,QACLJ,EAAAC,EAAAC,cAACM,EAAA,EAAe,CAACC,KAAIC,EAAA,cAAyB,IAAEZ,EAAW,IAC3DE,EAAAC,EAAAC,cAACM,EAAA,EAAe,CAACC,KAAIE,EAAA,gBAEvBX,EAAAC,EAAAC,cAAA,MAAIE,GAAG,UAAS,KAAGL,IAErBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,KACEE,GAAG,cACHD,UAAU,SACVS,KAAK,2BACLC,OAAO,UAEPb,EAAAC,EAAAC,cAAA,YAAM,eACQF,EAAAC,EAAAC,cAACM,EAAA,EAAe,CAACC,KAAIK,EAAA,cAGrCd,EAAAC,EAAAC,cAAA,UAAQE,GAAG,YAAYD,UAAU,SAASY,QAAS3B,GACjDY,EAAAC,EAAAC,cAAA,YAAM,aACMF,EAAAC,EAAAC,cAACM,EAAA,EAAe,CAACC,KAAIC,EAAA,kBAKvCV,EAAAC,EAAAC,cAAA,OAAKE,GAAG,UACNJ,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,SAAG,6BAEDF,EAAAC,EAAAC,cAAA,KACEU,KAAK,gCACLC,OAAO,SACPG,IAAI,uBAEH,IAAI,gBACQhB,EAAAC,EAAAC,cAACM,EAAA,EAAe,CAACC,KAAIQ,EAAA,kBAC/B,IAAI,cAGXjB,EAAAC,EAAAC,cAAA,SAAG,kCAEDF,EAAAC,EAAAC,cAAA,KACEU,KAAK,8DACLC,OAAO,SACPG,IAAI,uBAEH,IACDhB,EAAAC,EAAAC,cAACM,EAAA,EAAe,CAACJ,GAAG,aAAaK,KAAIS,EAAA,iBCnFtCC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvB,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,WAAU,KACfxB,EAAAC,EAAAC,cAACuB,EAAG","file":"static/js/main.5313b124.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid, brands } from '@fortawesome/fontawesome-svg-core/import.macro';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  const [quote, setQuote] = useState('');\n  const [author, setAuthor] = useState('');\n\n  useEffect(() => {\n    fetchRandomQuote();\n  }, []);\n\n  const fetchRandomQuote = () => {\n    axios\n      .get('https://dummyjson.com/quotes/random')\n      .then((response) => {\n        const data = response.data;\n\n        setQuote(data.quote);\n        setAuthor(data.author);\n      })\n\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const quoteText = quote;\n  const quoteAuthor = author;\n\n  return (\n    <div className='app'>\n      <div id='logo'>\n        <img src={logo} className='App-logo' alt='logo' />\n      </div>\n      <div id='quote-box' className='card'>\n        <div className='quote'>\n          <h2 id='text'>\n            <FontAwesomeIcon icon={solid('quote-left')} /> {quoteText}{' '}\n            <FontAwesomeIcon icon={solid('quote-right')} />\n          </h2>\n          <h3 id='author'>- {quoteAuthor}</h3>\n        </div>\n        <div className='button-box'>\n          <a\n            id='tweet-quote'\n            className='button'\n            href='twitter.com/intent/tweet'\n            target='_blank'\n          >\n            <span>\n              Tweet Quote <FontAwesomeIcon icon={brands('twitter')} />\n            </span>\n          </a>\n          <button id='new-quote' className='button' onClick={fetchRandomQuote}>\n            <span>\n              New Quote <FontAwesomeIcon icon={solid('quote-left')} />\n            </span>\n          </button>\n        </div>\n      </div>\n      <div id='footer'>\n        <footer>\n          <p>\n            Created by DiKeySnakes for\n            <a\n              href='https://www.freecodecamp.org/'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              {' '}\n              freeCodeCamp <FontAwesomeIcon icon={brands('free-code-camp')} />\n            </a>{' '}\n            curriculum\n          </p>\n          <p>\n            Copyright Â© DiKeySnakes 2023\n            <a\n              href='https://github.com/DiKeySnakes/random-quote-machine-project'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              {' '}\n              <FontAwesomeIcon id='githubIcon' icon={brands('github')} />\n            </a>\n          </p>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}